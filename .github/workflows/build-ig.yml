name: Build and Deploy FHIR IG

on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install SUSHI
        run: |
          npm install -g fsh-sushi

      - name: Install PlantUML
        run: |
          sudo apt-get update
          sudo apt-get install -y plantuml

      - name: Render PlantUML Diagrams
        run: |
          set -e  # Exit on error
          echo "Starting PlantUML rendering..."

          # Check if plantuml files exist
          if [ -d "input/images" ] && compgen -G "input/images/*.plantuml" > /dev/null; then
            echo "Found PlantUML files in input/images"
            ls -la input/images/*.plantuml

            # Render each file individually with error logging
            for file in input/images/*.plantuml; do
              echo "Rendering: $file"
              if plantuml -tsvg "$file" 2>&1 | tee plantuml-error.log; then
                echo "✓ Successfully rendered: $file"
              else
                echo "✗ Failed to render: $file"
                cat plantuml-error.log
                exit 1
              fi
            done
          else
            echo "No PlantUML files found in input/images"
          fi

          echo "PlantUML rendering complete"
        continue-on-error: false

      - name: Download IG Publisher
        run: |
          mkdir -p input-cache
          curl -L https://github.com/HL7/fhir-ig-publisher/releases/latest/download/publisher.jar -o input-cache/publisher.jar

      - name: Run SUSHI
        run: |
          echo "Running SUSHI..."
          sushi . 2>&1 | tee sushi-build.log
          echo "SUSHI completed"

      - name: Run IG Publisher
        run: |
          echo "Running IG Publisher..."
          java -jar input-cache/publisher.jar -ig . 2>&1 | tee ig-publisher.log
          echo "IG Publisher completed"

      - name: Upload Build Logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: build-logs
          path: |
            sushi-build.log
            ig-publisher.log
            plantuml-error.log
            output/qa.html
            output/qa.txt
          retention-days: 30

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./output

  deploy:
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
